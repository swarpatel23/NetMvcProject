
@model ProjectManagement_cum_feedback_systemMVC.Models.task

@{
    ViewBag.Title = "Create";
}
<div class="row mt-5">
    <div class="col-md-4">
        &nbsp;
    </div>
    <div class="col-md-4 wrapper-rounded p-3" style="background-color:white;">


        <h2>Create Task</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" value="@ViewBag.Project_id" name="Project_id" />
                <div class="form-group">
                    &nbsp;&nbsp;&nbsp;Task Id
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.task_Id_toshow, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.task_Id_toshow, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.task_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.task_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.task_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.start_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                      
                        @Html.TextBoxFor(model => model.start_date, new {@class = "form-control",@type="date"})
                        @Html.ValidationMessageFor(model => model.start_date, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.end_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.end_date, new { @class = "form-control", @type = "date" })
                        @Html.ValidationMessageFor(model => model.end_date, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.duration, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.duration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.duration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.percentage, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.percentage, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.percentage, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.dependencies, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dependencies, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.dependencies, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
    <div class="col-md-4">
        &nbsp;
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <style>
        .wrapper-rounded {
            border-radius: 12px;
            box-shadow: 0 0 2px rgba(0,0,0,.12), 0 2px 4px rgba(0,0,0,.24);
        }
    </style>
}
